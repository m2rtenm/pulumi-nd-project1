name: azure-yaml
runtime: yaml
description: A minimal Azure Native Pulumi YAML program
config:
  pulumi:tags:
    value:
      pulumi:template: azure-yaml
variables:
  location: ${azure-native:location}
  prefix: devops
  username: azureuser
  password: ${azure-yaml:password}
  vm_size: Standard_B1s
  disk_size: 5
  init_script: 
    fn::toBase64: |
        #!/bin/bash
        echo "hello, world" > index.html
        nohup busybox httpd -f -p 80 &
  
resources:
  resourceGroup:
    type: azure-native:resources:ResourceGroup
    properties:
      location: ${location}
      resourceGroupName: ${prefix}-ResourceGroup
  virtualNetwork:
    type: azure-native:network:VirtualNetwork
    properties:
      virtualNetworkName: ${prefix}-Network
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      addressSpace:
        addressPrefixes:
          - 10.0.0.0/16
  subnet:
    type: azure-native:network:Subnet
    properties:
      subnetName: internal
      resourceGroupName: ${resourceGroup.name}
      virtualNetworkName: ${virtualNetwork.name}
      addressPrefixes:
        - 10.0.0.0/24
  networkSecurityGroup:
    type: azure-native:network:NetworkSecurityGroup
    properties:
      networkSecurityGroupName: ${prefix}-nsg
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      securityRules:
        - name: AllowInternalTraffic
          priority: 100
          direction: Inbound
          access: Allow
          protocol: Tcp
          sourceAddressPrefix: ${subnet.addressPrefixes[0]}
          sourcePortRange: "*"
          destinationAddressPrefix: ${subnet.addressPrefixes[0]}
          destinationPortRange: "*"
        - name: DenyInternetInbound
          priority: 200
          direction: Inbound
          access: Deny
          protocol: Tcp
          sourceAddressPrefix: Internet
          sourcePortRange: "*"
          destinationAddressPrefix: "*"
          destinationPortRange: "*"
  publicIP:
    type: azure-native:network:PublicIPAddress
    properties:
      publicIpAddressName: ${prefix}-PublicIP
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      publicIPAllocationMethod: Static
      sku:
        name: Standard
  loadBalancer:
    type: azure-native:network:LoadBalancer
    properties:
      loadBalancerName: ${prefix}-lb
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      frontendIPConfigurations:
        - name: ${prefix}-LB-PublicIPAddress
          publicIPAddress: 
            id: ${publicIP.id}
      sku:
        name: Standard
  backendPool:
    type: azure-native:network:LoadBalancerBackendAddressPool
    properties:
      backendAddressPoolName: ${prefix}-BackendPool
      resourceGroupName: ${resourceGroup.name}
      loadBalancerName: ${loadBalancer.name}
    options:
      dependsOn:
        - ${loadBalancer}
  availabilitySet:
    type: azure-native:compute:AvailabilitySet
    properties:
      availabilitySetName: ${prefix}-AvailabilitySet
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      sku:
        name: Aligned
      platformFaultDomainCount: 2
  
  managedDisk_1:
    type: azure-native:compute:Disk
    properties:
      diskName: ${prefix}-ManagedDisk-1
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      creationData:
        createOption: Empty
      diskSizeGB: ${disk_size}
      sku:
        name: Standard_LRS

  managedDisk_2:
    type: azure-native:compute:Disk
    properties:
      diskName: ${prefix}-ManagedDisk-2
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      creationData:
        createOption: Empty
      diskSizeGB: ${disk_size}
      sku:
        name: Standard_LRS

  managedDisk_3:
    type: azure-native:compute:Disk
    properties:
      diskName: ${prefix}-ManagedDisk-3
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      creationData:
        createOption: Empty
      diskSizeGB: ${disk_size}
      sku:
        name: Standard_LRS
  
  networkInterface_1:
    type: azure-native:network:NetworkInterface
    properties:
      networkInterfaceName: ${prefix}-nic-1
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      ipConfigurations:
        - name: internal
          subnet:
            id: ${subnet.id}
          privateIPAllocationMethod: Dynamic
          loadBalancerBackendAddressPools:
            - id: ${backendPool.id}
      networkSecurityGroup:
        id: ${networkSecurityGroup.id}

  networkInterface_2:
    type: azure-native:network:NetworkInterface
    properties:
      networkInterfaceName: ${prefix}-nic-2
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      ipConfigurations:
        - name: internal
          subnet:
            id: ${subnet.id}
          privateIPAllocationMethod: Dynamic
          loadBalancerBackendAddressPools:
            - id: ${backendPool.id}
      networkSecurityGroup:
        id: ${networkSecurityGroup.id}

  networkInterface_3:
    type: azure-native:network:NetworkInterface
    properties:
      networkInterfaceName: ${prefix}-nic-3
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}
      ipConfigurations:
        - name: internal
          subnet:
            id: ${subnet.id}
          privateIPAllocationMethod: Dynamic
          loadBalancerBackendAddressPools:
            - id: ${backendPool.id}
      networkSecurityGroup:
        id: ${networkSecurityGroup.id}
  
  vm_1:
    type: azure-native:compute:VirtualMachine
    properties:
      vmName: ${prefix}-vm-1
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}

      hardwareProfile:
        vmSize: ${vm_size}
      
      networkProfile:
        networkInterfaces:
          - id: ${networkInterface_1.id}
      
      osProfile:
        adminUsername: ${username}
        adminPassword: ${password}
        computerName: ${prefix}-vm-1
        customData: ${init_script}
        linuxConfiguration:
          disablePasswordAuthentication: false
      
      availabilitySet:
        id: ${availabilitySet.id}
      
      storageProfile:
        osDisk:
          caching: ReadWrite
          createOption: FromImage
          managedDisk:
            storageAccountType: Standard_LRS
        imageReference:
          publisher: canonical
          offer: UbuntuServer
          sku: 18.04-LTS
          version: latest

  vm_2:
    type: azure-native:compute:VirtualMachine
    properties:
      vmName: ${prefix}-vm-2
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}

      hardwareProfile:
        vmSize: ${vm_size}
      
      networkProfile:
        networkInterfaces:
          - id: ${networkInterface_2.id}
      
      osProfile:
        adminUsername: ${username}
        adminPassword: ${password}
        computerName: ${prefix}-vm-2
        customData: ${init_script}
        linuxConfiguration:
          disablePasswordAuthentication: false
      
      availabilitySet:
        id: ${availabilitySet.id}
      
      storageProfile:
        osDisk:
          caching: ReadWrite
          createOption: FromImage
          managedDisk:
            storageAccountType: Standard_LRS
        imageReference:
          publisher: canonical
          offer: UbuntuServer
          sku: 18.04-LTS
          version: latest

  vm_3:
    type: azure-native:compute:VirtualMachine
    properties:
      vmName: ${prefix}-vm-3
      resourceGroupName: ${resourceGroup.name}
      location: ${resourceGroup.location}

      hardwareProfile:
        vmSize: ${vm_size}
      
      networkProfile:
        networkInterfaces:
          - id: ${networkInterface_3.id}
      
      osProfile:
        adminUsername: ${username}
        adminPassword: ${password}
        computerName: ${prefix}-vm-3
        customData: ${init_script}
        linuxConfiguration:
          disablePasswordAuthentication: false
      
      availabilitySet:
        id: ${availabilitySet.id}
      
      storageProfile:
        osDisk:
          caching: ReadWrite
          createOption: FromImage
          managedDisk:
            storageAccountType: Standard_LRS
        imageReference:
          publisher: canonical
          offer: UbuntuServer
          sku: 18.04-LTS
          version: latest